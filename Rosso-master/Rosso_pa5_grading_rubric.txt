This assignment is graded on a 100 point scale. Your submission will be graded with the following breakdown:

15 points: Extension of your parser spec to correctly scan all tokens and parse for the PA5 grammar demonstrated with test cases
(-5 multiple syntax errors in some test cases)

15 points: Creates a symbol table that accurately represents the static scoping of the MeggyJava programs of PA5 including class scopes

10 points: Check for undefined, doubly defined, and incorrectly typed symbols
(-5 you're throwing undefined variable errors on valid code, such as PA5Cylon)

15 points: Performs correct type checking for the PA5 grammar rules according to the MJ.jar reference compiler type errors (handles member variables, locals and assignment)
(-5 a few 'node not implemented in checktypes' errors)

10 points: Continues to perform code generation to AVR assembly code for the PA4 AST nodes using a visitor

15 points: Performs correct code geneation to AVR assembly code for the added features in PA5 grammar:
   this in parameters and expression
   assignment
   new class objects
   local variable uses and definitions
   equality comparison of class refs
   class refs
(-10 as a result of the issues above, many test cases did not run. As a result, I could not adequately test your code generation)

10 points: test cases for PA5 features

5 points: README file explaining the file structure (your test files) and other comments you want your TA to know (e.g. features not implemented)

5 points: Follows instructions for submission correctly

Total: 75/100
